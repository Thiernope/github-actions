{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weatherData","setWeatherData","loading","setLoading","city","setCity","getWeather","e","preventDefault","fetch","process","then","response","json","data","className","href","target","rel","onSubmit","value","onChange","selectedCity","onKeyPress","type","name","population","list","main","temp_max","temp_min","dt_txt","coord","lat","lon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA6FeA,MA1Ff,WACA,IAEE,EAAsCC,mBAAS,CAAC,KAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAyBJ,mBAAS,eAAlC,mBAAOK,EAAP,KAAaC,EAAb,KAIMC,EAAa,SAACC,GAClBA,EAAEC,iBACFL,EAAW,cAAC,IAAD,KACTM,MAAM,GAAD,OAVoBC,0CAUpB,uBAAqCN,EAArC,kBAXmBM,qCAWqDC,MAC3E,SAAAC,GAAQ,OAAIA,EAASC,UACrBF,MACD,SAAAG,GACEX,EAAW,IACXF,EAAea,GACfT,EAAQ,QAMf,OAEE,sBAAKU,UAAU,MAAf,UAEE,yBAAQA,UAAU,aAAlB,UACE,mBACEA,UAAU,WACVC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,0BAQJ,iEAGA,sBAAKH,UAAU,OAAf,UACE,uBAAMA,UAAU,OAAOI,SAAUb,EAAjC,UACA,yBAAQS,UAAU,SAASK,MAAShB,EAAMiB,SAAY,SAACd,GACnD,IAAMe,EAAef,EAAEU,OAAOG,MAC9Bf,EAAQiB,IAERC,WAAYjB,EAJhB,UAKI,wBAAQc,MAAM,SAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,uBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,aAAd,2BAIN,uBAAOL,UAAU,MAAMS,KAAK,SAASJ,MAAM,eAG3C,qBAAKL,UAAU,OAAf,SAE+B,qBAArBf,EAAYI,KAAwB,gCAAK,oBAAIW,UAAU,QAAd,yDAAuEb,KACvH,gCACEA,EACD,mBAAGa,UAAU,OAAb,SAAqBf,EAAYI,KAAKqB,OACtC,6CAAe,+BAAOzB,EAAYI,KAAKsB,gBACvC,sBAAKX,UAAU,aAAf,UACA,sBAAKA,UAAU,OAAf,UACA,2CAAa,iCAAOf,EAAY2B,KAAK,GAAGC,KAAKC,SAAhC,WACb,2CAAa,iCAAO7B,EAAY2B,KAAK,GAAGC,KAAKE,SAAhC,cAEb,sBAAKf,UAAU,eAAf,UACA,uCAAS,+BAAOf,EAAY2B,KAAK,GAAGI,YACpC,sCAAQ,+BAAO/B,EAAYI,KAAK4B,MAAMC,SACtC,uCAAS,+BAAOjC,EAAYI,KAAK4B,MAAME,2BCnEhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a865af6d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nfunction App() {\nconst { REACT_APP_API_KEY } = process.env;\nconst { REACT_APP_URL_BASE } = process.env;\n  const [weatherData, setWeatherData] = useState([{}]);\n  const [loading, setLoading ] = useState(\"\");\n  const [city, setCity ] = useState(\"Select City\");\n\n\n\n  const getWeather = (e) => {\n    e.preventDefault();\n    setLoading(<ClipLoader/>);\n      fetch(`${REACT_APP_URL_BASE}/forecast?q=${city}&appid=${REACT_APP_API_KEY}`).then(\n        response => response.json()\n      ).then(\n       data => {\n         setLoading(\"\");\n         setWeatherData(data);\n         setCity(\"\");\n       }\n      )\n    \n  }\n\n  return (\n    \n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Deployed app\n        </a>\n    <button>It's perfectly working!!</button>\n      </header>\n \n    <div className=\"Cont\">\n      <form className=\"form\" onSubmit={getWeather} >\n      <select className=\"select\" value = {city} onChange = {(e)=>{\n          const selectedCity = e.target.value;\n          setCity(selectedCity);\n        }\n        } onKeyPress={getWeather}>\n          <option value=\"select\">Select City</option>\n          <option value=\"london\">London</option>\n          <option value=\"new york\">New York</option>\n          <option value=\"kigali\">Kigali</option>\n          <option value=\"santiago\">Santiago</option>\n          <option value=\"arserri\">Aserr√≠</option>\n          <option value=\"sanpedro\">San Pedro</option>\n          <option value=\"filadelfia\">Filadelfia</option>\n\n    </select>\n\n    <input className=\"btn\" type=\"submit\" value=\"--->\"/>\n      </form>\n\n    <div className=\"left\">\n    {\n       typeof weatherData.city === \"undefined\" ? (<div><h1 className=\"title\">Welcome, Enter the city and see the weather</h1>{loading}</div>):\n      (<div>\n        {loading}\n        <p className=\"name\">{weatherData.city.name}</p>\n        <p>Population: <span>{weatherData.city.population}</span></p>\n        <div className=\"div_banner\">\n        <div className=\"temp\">\n        <p>Max Temp: <span>{weatherData.list[0].main.temp_max}*F</span></p>\n        <p>Min Temp: <span>{weatherData.list[0].main.temp_min}*F</span></p>\n        </div>\n        <div className=\"lat_lon_time\">\n        <p>Time: <span>{weatherData.list[0].dt_txt}</span></p>\n        <p>lat: <span>{weatherData.city.coord.lat}</span></p>\n        <p>Long: <span>{weatherData.city.coord.lon}</span></p>\n        </div>\n        </div>\n\n      </div>)\n    } \n     </div>\n    </div>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}